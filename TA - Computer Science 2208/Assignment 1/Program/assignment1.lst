


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             questionOne, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 00000030 
                       toInt   EQU              48          ;Need to subtract 4
                                                            8 from acsii of num
                                                            ber to get integer
    5 00000000 E59F0058        LDR              r0, =UPC    ;Loading UPC into r
                                                            0
    6 00000004         
    7 00000004         sum                                  ;Summing every numb
                                                            er storing the sum 
                                                            of odd index in r4 
                                                            and even index in r
                                                            3
    8 00000004 E7D01002        LDRB             r1, [r0, r2] ;Loading digit
    9 00000008 E2411030        SUB              r1, #toInt  ;Converting digit t
                                                            o integer
   10 0000000C E3120001        TST              r2, #1      ;Even/odd test
   11 00000010 10844001        ADDNE            r4, r1      ;If odd index add t
                                                            he digit to r3
   12 00000014 00833001        ADDEQ            r3, r1      ;If even index add 
                                                            the digit to r4
   13 00000018 E2822001        ADD              r2, #1      ;Incrementing count
                                                            er
   14 0000001C E352000B        CMP              r2, #11     ;Testing if all dig
                                                            its other than the 
                                                            check digit have be
                                                            en summed
   15 00000020 1AFFFFF7        BNE              sum         ;Continues to add i
                                                            f false
   16 00000024         
   17 00000024 E0833083        ADD              r3, r3, r3, LSL#1 ;Multiply the
                                                             odd sum by 3
   18 00000028 E0833004        ADD              r3, r4      ;Add both sums toge
                                                            ther
   19 0000002C E2433001        SUB              r3, #1      ;Subtract 1 from th
                                                            e sum
   20 00000030 E5D0100B        LDRB             r1, [r0, #11] ;Move to the last
                                                             position of the UP
                                                            C
   21 00000034 E2411030        SUB              r1, #toInt  ;Converting to inte
                                                            ger    
   22 00000038         
   23 00000038         div10
   24 00000038 E243300A        SUB              r3, #10     ;Dividing by 10 and
                                                             storing remainder 
                                                            in r2
   25 0000003C E353000A        CMP              r3, #10
   26 00000040 CAFFFFFC        BGT              div10
   27 00000044         
   28 00000044 E2633009        RSB              r3, r3, #9  ;Subtracting r2 fro
                                                            m 9 and storing in 
                                                            r2
   29 00000048 E1510003        CMP              r1, r3      ;If the check digit
                                                             is valid store 1 i
                                                            n r0, else store 2 
                                                            in r0
   30 0000004C 03A00001        MOVEQ            r0, #1



ARM Macro Assembler    Page 2 


   31 00000050 13A00002        MOVNE            r0, #2
   32 00000054         
   33 00000054 30 36 30 
              33 38 33 
              37 35 38 
              37 38 33 UPC     DCB              "060383758783" ;UPC string 
   34 00000060                 END
              00000000 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\assignment1.d -o.
\assignment1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="
__EVAL SETA 1" --list=.\assignment1.lst Assignment1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

UPC 00000054

Symbol: UPC
   Definitions
      At line 33 in file Assignment1.s
   Uses
      At line 5 in file Assignment1.s
Comment: UPC used once
div10 00000038

Symbol: div10
   Definitions
      At line 23 in file Assignment1.s
   Uses
      At line 26 in file Assignment1.s
Comment: div10 used once
questionOne 00000000

Symbol: questionOne
   Definitions
      At line 1 in file Assignment1.s
   Uses
      None
Comment: questionOne unused
sum 00000004

Symbol: sum
   Definitions
      At line 7 in file Assignment1.s
   Uses
      At line 15 in file Assignment1.s
Comment: sum used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

toInt 00000030

Symbol: toInt
   Definitions
      At line 4 in file Assignment1.s
   Uses
      At line 9 in file Assignment1.s
      At line 21 in file Assignment1.s

1 symbol
338 symbols in table
