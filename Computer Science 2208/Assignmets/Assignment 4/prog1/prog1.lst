


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             prog1, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E28F007A        ADR              r0, STRING3 ;Identifies the poi
                                                            nter for the free m
                                                            emory location   
    5 00000004 E59F1040        LDR              r1, =STRING1 ;Loads the pointer
                                                             of STRING1 to r1  
                                                             
    6 00000008         
    7 00000008         START
    8 00000008 E3A04000        MOV              r4, #0      ;Moves the value of
                                                             the character "nul
                                                            l" in hexadecimal i
                                                            nto r4 to point to 
                                                            the start of a stri
                                                            ng
    9 0000000C         
   10 0000000C         LOOP
   11 0000000C E7D13004        LDRB             r3, [r1, r4] ;Loads a byte into
                                                             r3 from the memory
                                                             location appointed
                                                             by r1 in position 
                                                            r4
   12 00000010 E2844001        ADD              r4, r4, #1  ;Increments r4.
   13 00000014         
   14 00000014 E1530002        CMP              r3, r2      ;Compares r3's valu
                                                            e to a r2's value, 
                                                            null.
   15 00000018 0A000003        BEQ              BOOL        ;If r3 contains the
                                                             "null" value, bran
                                                            ch to BOOL
   16 0000001C 1AFFFFFF        BNE              STORE       ;Else branch to STO
                                                            RE
   17 00000020         
   18 00000020         STORE
   19 00000020 E7C03005        STRB             r3, [r0, r5] ;Store the byte co
                                                            ntained in r3 into 
                                                            r0 at r5
   20 00000024 E2855001        ADD              r5, r5, #1  ;Increments r5
   21 00000028 EAFFFFF7        B                LOOP        ;Branch back to LOO
                                                            P
   22 0000002C         
   23 0000002C         BOOL
   24 0000002C E3560000        CMP              r6, #0      ;Compares r6 to 0, 
                                                            r6 contains the num
                                                            ber of Strings appe
                                                            nded
   25 00000030 0A000001        BEQ              NEXTS       ;If r6 equals 0, br
                                                            anch to NETS
   26 00000034 E7C12005        STRB             r2, [r1, r5] ;Else store r2's v
                                                            alue, "null", as th
                                                            e last character of
                                                             memory location co
                                                            ntained in r1
   27 00000038 EA000002        B                ILOOP       ;Ends the program
   28 0000003C         
   29 0000003C         NEXTS
   30 0000003C E2866001        ADD              r6, r6, #1  ;increments r6, the



ARM Macro Assembler    Page 2 


                                                             number of strings 
                                                            appended
   31 00000040 E59F1008        LDR              r1, =STRING2 ;Loads the pointer
                                                             of STRING2 to r1  
                                                            
   32 00000044 EAFFFFEF        B                START       ;Branches to start
   33 00000048         
   34 00000048 EAFFFFFE 
                       ILOOP   B                ILOOP       ;Infinate loop
   35 0000004C         
   36 0000004C 00000000 
              00000000         AREA             prog1, DATA, READWRITE
   37 00000054 54 68 69 
              73 20 69 
              73 20 61 
              20 74 65 
              73 74 20 
              73 74 72 
              69 6E 67 
              31       STRING1 DCB              "This is a test string1" 
                                                            ;String1
   38 0000006A 00      EoS1    DCB              0x00        ;end of string1
   39 0000006B 54 68 69 
              73 20 69 
              73 20 61 
              20 74 65 
              73 74 20 
              73 74 72 
              69 6E 67 
              32       STRING2 DCB              "This is a test string2" 
                                                            ;String
   40 00000081 00      EoS2    DCB              0x00        ;end of string2
   41 00000082 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 STRING3 space            0xFF
   42 00000181                 END



ARM Macro Assembler    Page 4 


Command Line: --debug --xref --bi --apcs=interwork --depend=.\prog1.d -o.\prog1
.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 
1" --list=.\prog1.lst prog1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BOOL 0000002C

Symbol: BOOL
   Definitions
      At line 23 in file prog1.s
   Uses
      At line 15 in file prog1.s
Comment: BOOL used once
EoS1 0000006A

Symbol: EoS1
   Definitions
      At line 38 in file prog1.s
   Uses
      None
Comment: EoS1 unused
EoS2 00000081

Symbol: EoS2
   Definitions
      At line 40 in file prog1.s
   Uses
      None
Comment: EoS2 unused
ILOOP 00000048

Symbol: ILOOP
   Definitions
      At line 34 in file prog1.s
   Uses
      At line 27 in file prog1.s
      At line 34 in file prog1.s

LOOP 0000000C

Symbol: LOOP
   Definitions
      At line 10 in file prog1.s
   Uses
      At line 21 in file prog1.s
Comment: LOOP used once
NEXTS 0000003C

Symbol: NEXTS
   Definitions
      At line 29 in file prog1.s
   Uses
      At line 25 in file prog1.s
Comment: NEXTS used once
START 00000008

Symbol: START
   Definitions
      At line 7 in file prog1.s
   Uses
      At line 32 in file prog1.s
Comment: START used once
STORE 00000020




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: STORE
   Definitions
      At line 18 in file prog1.s
   Uses
      At line 16 in file prog1.s
Comment: STORE used once
STRING1 00000054

Symbol: STRING1
   Definitions
      At line 37 in file prog1.s
   Uses
      At line 5 in file prog1.s
Comment: STRING1 used once
STRING2 0000006B

Symbol: STRING2
   Definitions
      At line 39 in file prog1.s
   Uses
      At line 31 in file prog1.s
Comment: STRING2 used once
STRING3 00000082

Symbol: STRING3
   Definitions
      At line 41 in file prog1.s
   Uses
      At line 4 in file prog1.s
Comment: STRING3 used once
prog1 00000000

Symbol: prog1
   Definitions
      At line 1 in file prog1.s
   Uses
      None
Comment: prog1 unused
12 symbols
345 symbols in table
