


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             prog1, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E59F0068        LDR              r0, =UPC    ;loads the memory l
                                                            ocation of UPC into
                                                             register zero
    5 00000004 E3A01000        MOV              r1, #0      ;loads the value 0 
                                                            into register one
    6 00000008 E3A02001        MOV              r2, #1      ;loads the value 1 
                                                            into register two
    7 0000000C         
    8 0000000C         LOOP
    9 0000000C E7D03001        LDRB             r3, [r0, r1] ;loads a byte from
                                                             the memory locatio
                                                            n r0 at pointer r1 
                                                            into r3
   10 00000010 E7D04002        LDRB             r4, [r0, r2] ;loads a byte from
                                                             the memory locatio
                                                            n r0 at pointer r2 
                                                            into r4
   11 00000014         
   12 00000014 E2433030        SUB              r3, r3, #48 ;changes the ASCII 
                                                            value of the byte t
                                                            o an integer
   13 00000018 E2444030        SUB              r4, r4, #48 ;changes the ASCII 
                                                            value of the byte t
                                                            o an integer
   14 0000001C         
   15 0000001C E0855003        ADD              r5, r5, r3  ;adds up the odd in
                                                            tegers
   16 00000020 E0866004        ADD              r6, r6, r4  ;adds up the even i
                                                            ntegers
   17 00000024         
   18 00000024 E2811002        ADD              r1, r1, #2  ;increments the poi
                                                            nter r1 by 2
   19 00000028 E2822002        ADD              r2, r2, #2  ;increments the poi
                                                            nter r2 by 2
   20 0000002C         
   21 0000002C E351000C        CMP              r1, #12     ;checks if r1 is eq
                                                            ual to 12 which mea
                                                            ns we already store
                                                            d 12 inetegers
   22 00000030 1AFFFFF5        BNE              LOOP        ;branches back to L
                                                            OOP if CMP doesnt r
                                                            eturn a 0
   23 00000034         
   24 00000034 E0855085        ADD              r5, r5, LSL #1 ;multiplies the 
                                                            r5 value by 3 by us
                                                            ing a left logical 
                                                            shift
   25 00000038         
   26 00000038 E0851006        ADD              r1, r5, r6  ;adds the odd numbe
                                                            rs multiplied by 3 
                                                            and the even number
                                                            s
   27 0000003C         
   28 0000003C E3A00000        MOV              r0, #0      ;sets the value of 
                                                            r0 to 0
   29 00000040 EAFFFFFF        B                MOD10       ;branches to MOD10



ARM Macro Assembler    Page 2 


   30 00000044         
   31 00000044         MOD10
   32 00000044 E3510009        CMP              r1, #9      ;checks if the valu
                                                            e og r1 is less tha
                                                            n 10 
   33 00000048 C241100A        SUBGT            r1, r1, #10 ;subtracts 10 from 
                                                            the value of r1
   34 0000004C B3A00001        MOVLT            r0, #1      ;changes the value 
                                                            of r0 to 1 if the v
                                                            alue of r1 is less 
                                                            than 10
   35 00000050 E3500001        CMP              r0, #1      ;checks if r0 is 1 
                                                            which means that r1
                                                             is less than 10
   36 00000054 1AFFFFFA        BNE              MOD10       ;braches to MOD10 a
                                                            gain as long as r0 
                                                            is not 1
   37 00000058         
   38 00000058         CHECK
   39 00000058 E3510000        CMP              r1, #0      ;checks of the fina
                                                            l value of r1 is eq
                                                            ual to 0
   40 0000005C 0A000000        BEQ              VALID       ;braches to VALID i
                                                            f the final value i
                                                            s equal 0 which mea
                                                            ns that the UPC is 
                                                            valid
   41 00000060 1A000001        BNE              NOTVLID     ;ifnot, branches to
                                                             NOTVALD
   42 00000064         VALID
   43 00000064 E3A00001        MOV              r0, #1      ;sets the value of 
                                                            r0 to 1
   44 00000068 EA000000        B                JUMP        ;braches to JUMP
   45 0000006C         NOTVLID
   46 0000006C E3A00000        MOV              r0, #0      ;sets the value of 
                                                            r0 to 0  
   47 00000070         JUMP
   48 00000070         
   49 00000070 00000000        AREA             prog1, DATA, READWRITE
   50 00000074 30 31 33 
              38 30 30 
              31 35 30 
              37 33 38 
              00       UPC     DCB              "013800150738", 0 ;UPC string
   51 00000081 00      EoS     DCB              0x00        ;end of string
   52 00000082                 END                          ;end of program
Command Line: --debug --xref --bi --apcs=interwork --depend=.\prog1.d -o.\prog1
.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 
1" --list=.\prog1.lst prog1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CHECK 00000058

Symbol: CHECK
   Definitions
      At line 38 in file prog1.s
   Uses
      None
Comment: CHECK unused
EoS 00000081

Symbol: EoS
   Definitions
      At line 51 in file prog1.s
   Uses
      None
Comment: EoS unused
JUMP 00000070

Symbol: JUMP
   Definitions
      At line 47 in file prog1.s
   Uses
      At line 44 in file prog1.s
Comment: JUMP used once
LOOP 0000000C

Symbol: LOOP
   Definitions
      At line 8 in file prog1.s
   Uses
      At line 22 in file prog1.s
Comment: LOOP used once
MOD10 00000044

Symbol: MOD10
   Definitions
      At line 31 in file prog1.s
   Uses
      At line 29 in file prog1.s
      At line 36 in file prog1.s

NOTVLID 0000006C

Symbol: NOTVLID
   Definitions
      At line 45 in file prog1.s
   Uses
      At line 41 in file prog1.s
Comment: NOTVLID used once
UPC 00000074

Symbol: UPC
   Definitions
      At line 50 in file prog1.s
   Uses
      At line 4 in file prog1.s
Comment: UPC used once
VALID 00000064




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: VALID
   Definitions
      At line 42 in file prog1.s
   Uses
      At line 40 in file prog1.s
Comment: VALID used once
prog1 00000000

Symbol: prog1
   Definitions
      At line 1 in file prog1.s
   Uses
      None
Comment: prog1 unused
9 symbols
342 symbols in table
